#
# STF DeviceFarm Dockerfile
# Based on the original STF Dockerfile with customizations for DeviceFarm
#

FROM ubuntu:22.04

ENV PATH=/app/bin:$PATH

WORKDIR /app
COPY . /tmp/build/

EXPOSE 3000

ARG TARGETARCH

RUN if [ "$TARGETARCH" = "amd64" ]; then \
    export DEBIAN_FRONTEND=noninteractive && \
    useradd --system --create-home --shell /usr/sbin/nologin stf-build && \
    useradd --system --create-home --shell /usr/sbin/nologin stf && \
    sed -i'' 's@http://archive.ubuntu.com/ubuntu/@mirror://mirrors.ubuntu.com/mirrors.txt@' /etc/apt/sources.list && \
    apt-get update && \
    apt-get -y dist-upgrade && \
    apt-get -y install wget python3 build-essential && \
    cd /tmp && \
    wget --progress=dot:mega https://nodejs.org/dist/v22.11.0/node-v22.11.0-linux-x64.tar.xz && \
    tar -xJf node-v*.tar.xz --strip-components 1 -C /usr/local && \
    rm node-v*.tar.xz && \
    su stf-build -s /bin/bash -c '/usr/local/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js install' && \
    apt-get -y install --no-install-recommends libzmq3-dev libprotobuf-dev git graphicsmagick openjdk-8-jdk yasm cmake && \
    apt-get clean && \
    rm -rf /var/cache/apt/* /var/lib/apt/lists/* && \
    mkdir /tmp/bundletool && \
    cd /tmp/bundletool && \
    wget --progress=dot:mega https://github.com/google/bundletool/releases/download/1.2.0/bundletool-all-1.2.0.jar && \
    mv bundletool-all-1.2.0.jar bundletool.jar && \
    mkdir -p /app && \
    chown -R stf:stf /tmp/build /tmp/bundletool /app && \
    cd /tmp/build && \
    export PATH=$PWD/node_modules/.bin:$PATH && \
    su stf -s /bin/bash -c 'npm install --python="/usr/bin/python3" --omit=optional --loglevel http' && \
    su stf -s /bin/bash -c 'npm pack' && \
    tar xzf devicefarmer-stf-*.tgz --strip-components 1 -C /app && \
    su stf -s /bin/bash -c '/tmp/build/node_modules/.bin/bower cache clean' && \
    npm prune --omit=dev && \
    mv node_modules /app && \
    mkdir /app/bundletool && \
    mv /tmp/bundletool/* /app/bundletool && \
    cd /app && \
    find /tmp -mindepth 1 ! -regex '^/tmp/hsperfdata_root\(/.*\)?' -delete && \
    rm -rf doc .github .tx .semaphore *.md *.yaml LICENSE Dockerfile* \
           .eslintrc .nvmrc .tool-versions res/.eslintrc && \
    rm -rf ~/.node-gyp && \
    rm -rf /home/stf/.npm /home/stf/.cache /home/stf/.config /home/stf/.local; \
  fi

# ✅ Sao chép file init-db.js sau khi app đã được giải nén
COPY lib/cli/init-db.js /app/lib/cli/init-db.js

RUN echo "STF DeviceFarm Image - Customized for DeviceFarm Environment" > /app/VERSION && \
    echo "Built on: $(date)" >> /app/VERSION

USER stf

CMD ["stf", "--help"]